/*
SDE 2 
Daniel Mecca CPSC 352
Test Cases Different From Test Cases in Report Paperwork
*/
decrementVal(2,Y).
Y = 1.
decrementVal(4,Y).
Y = 3.

addVals(1,2,Out).
Out = 3.
addVals(2,4,Out).
Out = 6.

hop11Activation(-0.4,0.0,-1.0,X).
X = -1.0.
hop11Activation(0.1,0.0,-1.0,X).
X = 1.0.


hop11ActAll([1.0,-9.0,0.0],0.0,[-1.0,1.0,1.0],New).
New = [1.0, -1.0, 1.0].
hop11ActAll( [-10.0, 5.0, -1.0, 2.3, 0.0, 7.7, -3.5],
0.0,[-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0],New).
New = [-1.0, 1.0, -1.0, 1.0, 1.0, 1.0, -1.0].

netUnit([-1.0, -1.0],[0.0, 1.0],NU).
NU = -1.0.

netUnit([-1.0, -1.0,1.0],[0.0, 1.0,-1.0],NU).
NU = -2.0.

netAll([-1.0, -1.0], [[-1.0, 0.0]],X).
X = [1.0].
netAll([-1.0, -1.0], [[-1.0, 0.0],[-1.0,1.0]],X).
X = [1.0, 0.0].


hopTrainAstate([-1.0,-1.0,1.0,-1.0],WM).
WM = [[0.0, 1.0, -1.0, 1.0], [1.0, 0.0, -1.0, 1.0], [-1.0, -1.0, 0.0, -1.0], [1.0, 1.0, -1.0, 0.0]].
hopTrain([[-1.0,1.0]],W1).
W1 = [[0.0, -1.0], [-1.0, 0.0]].

addList([-1.0,1.0],[-1.0,1.0],X).
X = [-2.0, 2.0].
addList([-1.0,1.0],[-1.0,2.0],X).
X = [-2.0, 3.0].



data(o1o2o4,H),hopTrain(H,W3).
H = [[1.0, -1.0, 1.0, -1.0], [-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W3 = [[0.0, 1.0, 3.0, -1.0], [1.0, 0.0, 1.0, 1.0], [3.0, 1.0, 0.0, -1.0], [-1.0, 1.0, -1.0, 0.0]].
data(o1o2o5,H),hopTrain(H,W3).
H = [[1.0, -1.0, -1.0, -1.0], [1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W3 = [[0.0, -1.0, -1.0, -3.0], [-1.0, 0.0, 3.0, 1.0], [-1.0, 3.0, 0.0, 1.0], [-3.0, 1.0, 1.0, 0.0]].


data(o1o2o4,H2),hopTrain(H2,W4),data(os3,O3),nextState(O3,W4,0.0,NS).
H2 = [[1.0, -1.0, 1.0, -1.0], [-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W4 = [[0.0, 1.0, 3.0, -1.0], [1.0, 0.0, 1.0, 1.0], [3.0, 1.0, 0.0, -1.0], [-1.0, 1.0, -1.0, 0.0]],
O3 = [-1.0, -1.0, 1.0, 1.0],
NS = [1.0, 1.0, -1.0, -1.0].

data(o1o2o5,H2),hopTrain(H2,W4),data(os3,O3),nextState(O3,W4,0.0,NS).
H2 = [[1.0, -1.0, -1.0, -1.0], [1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W4 = [[0.0, -1.0, -1.0, -3.0], [-1.0, 0.0, 3.0, 1.0], [-1.0, 3.0, 0.0, 1.0], [-3.0, 1.0, 1.0, 0.0]],
O3 = [-1.0, -1.0, 1.0, 1.0],
NS = [-1.0, 1.0, -1.0, 1.0].

data(o1o2o4,H2),hopTrain(H2,W4),data(os3,O3),energy(O3,W4,E).
H2 = [[1.0, -1.0, 1.0, -1.0], [-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W4 = [[0.0, 1.0, 3.0, -1.0], [1.0, 0.0, 1.0, 1.0], [3.0, 1.0, 0.0, -1.0], [-1.0, 1.0, -1.0, 0.0]],
O3 = [-1.0, -1.0, 1.0, 1.0],
E = 4.0.
data(o1o2o5,H2),hopTrain(H2,W4),data(os3,O3),energy(O3,W4,E).
H2 = [[1.0, -1.0, -1.0, -1.0], [1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 1.0]],
W4 = [[0.0, -1.0, -1.0, -3.0], [-1.0, 0.0, 3.0, 1.0], [-1.0, 3.0, 0.0, 1.0], [-3.0, 1.0, 1.0, 0.0]],
O3 = [-1.0, -1.0, 1.0, 1.0],
E = -0.0.

data(oi,Oi),data(we,W),updateN(Oi,W,0.0,30,Next).
Oi = [-1.0, -1.0],
W = [[0.0, -1.0], [-1.0, 0.0]],
Next = [-1.0, -1.0].
data(os1,Oi),data(we,W),updateN(Oi,W,0.0,2,Next).
Oi = [1.0, -1.0, 1.0, -1.0],
W = [[0.0, -1.0], [-1.0, 0.0]],
Next = [1.0, -1.0, 1.0, -1.0].

data(os1,Oi),data(we,W),findsEquilibrium(Oi,W,0.0,0).
Oi = [1.0, -1.0, 1.0, -1.0],
W = [[0.0, -1.0], [-1.0, 0.0]].
data(oi,Oi),data(we,W),findsEquilibrium(Oi,W,0.0,30).
false.

